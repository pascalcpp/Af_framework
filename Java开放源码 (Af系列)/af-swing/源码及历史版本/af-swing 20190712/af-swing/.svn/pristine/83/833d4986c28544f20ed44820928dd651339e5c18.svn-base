package af.swing.image;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.RoundRectangle2D;

import javax.swing.JPanel;

public class AfImageButton extends JPanel
{
	public Attribute normal = new Attribute();
	public Attribute hover = new Attribute();	
	public int radius = 4;
	public int padding = 1;
	
	private boolean isHover = false;
	private ActionListener clickListener;
	
	public AfImageButton()
	{
		this.setOpaque(false);
		enableEvents(MouseEvent.MOUSE_EVENT_MASK);
	}
	
	public void setIcon(Image icon)
	{
		normal.image = icon;
		if(hover.image == null)	hover.image = icon;
		repaint();
	}
	
	public void addActionListener(ActionListener l)
	{
		this.clickListener = l;
	}
	
	protected void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		//
		Graphics2D g2d = (Graphics2D)g;		
		Rectangle r = new Rectangle(getWidth(), getHeight());
		r.grow(-padding, -padding);
		
		// 背景绘制
		Shape bg = new RoundRectangle2D.Double(
				r.x,r.y,r.width,r.height
				,radius,radius);		
		if(isHover)
		{
			if(hover.bgColor != null)
			{
				g2d.setPaint(hover.bgColor);	
				g2d.fill(bg);
			}
			if(hover.borderColor != null)
			{
				g2d.setPaint(hover.borderColor);
				g2d.draw(bg);
			}
		}
		else
		{
			if(normal.bgColor != null)
			{
				g2d.setPaint(normal.bgColor);	
				g2d.fill(bg);
			}
			if(normal.borderColor != null)
			{
				g2d.setPaint(normal.borderColor);
				g2d.draw(bg);
			}
		}
			
		Image icon = normal.image;
		if(isHover && hover.image != null)
		{
			icon = hover.image;
		}
		
		// 图标绘制
		if(icon != null)
		{
			int imgW = icon.getWidth(null);
			int imgH = icon.getHeight(null);
			
			// 使用  AfImageScaler 来计算
			AfImageScaler scaler = new AfImageScaler(imgW, imgH, r.width,r.height);
			
			// 根据缩放类型，来计算目标区域
			Rectangle fit = scaler.fitCenterInside();
			// 绘制
			g.drawImage(icon, r.x + fit.x, r.y + fit.y, fit.width, fit.height,	null);

		}
	}
	
	@Override
	protected void processMouseEvent(MouseEvent e)
	{		
		//System.out.println("processMouseEvent:" + e.getPoint());
		
		int eventID = e.getID();
		
		// 鼠标点击, 调用监听器
		if(eventID == MouseEvent.MOUSE_PRESSED)
		{
			if(clickListener != null)
			{
				ActionEvent ae = new ActionEvent(this, eventID, "clicked");
				clickListener.actionPerformed(ae);
			}
		}
		
		// 鼠标移入, 进入hover状态
		if(eventID == MouseEvent.MOUSE_ENTERED)
		{
			isHover = true;
			repaint();
			return;
		}
		
		// 鼠标移出, 退出hover状态
		if(eventID == MouseEvent.MOUSE_EXITED)
		{
			isHover = false;
			repaint();
			return;
		}
		
		super.processMouseEvent(e);
	}
	
	// 属性设置
	public static class Attribute
	{
		public Color borderColor;
		public Color bgColor;
		public Image image;
	}
}
