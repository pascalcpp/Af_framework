package af.swing.image;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.RoundRectangle2D;

import javax.swing.JPanel;

public class AfImageButton extends JPanel
{
	public Image icon;
	public int radius = 4;
	public Color bgColor = new Color(0,0,0,0);	
	public Color hoverBgColor = new Color(255,255,255,200);
	
	private boolean hover = false;
	private ActionListener clickListener;
	
	public AfImageButton()
	{
		enableEvents(MouseEvent.MOUSE_EVENT_MASK);
	}
	
	public void setIcon(Image icon)
	{
		this.icon = icon;
		repaint();
	}
	
	public void setPreferredSize(int w, int h)
	{
		this.setPreferredSize(new Dimension(w, h));
	}
	
	public void setActionListener(ActionListener l)
	{
		this.clickListener = l;
	}
	
	protected void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		//
		Graphics2D g2d = (Graphics2D)g;		
		int w = getWidth();
		int h = getHeight();
		
		
		// 背景绘制
		Shape bgRect = new RoundRectangle2D.Double(0,0,w,h,radius,radius);
		if(hover)
		{
			g2d.setPaint(hoverBgColor);				
		}
		else
		{
			g2d.setPaint(bgColor);
		}
		g2d.fill(bgRect);
		
		// 图标绘制
		if(icon != null)
		{
			int imgW = icon.getWidth(null);
			int imgH = icon.getHeight(null);
			
			// 使用  AfImageScaler 来计算
			AfImageScaler scaler = new AfImageScaler(imgW, imgH, w,h);
			
			// 根据缩放类型，来计算目标区域
			Rectangle fit = scaler.fitCenterInside();
			// 绘制
			g.drawImage(icon, fit.x, fit.y, fit.width, fit.height,	null);

		}
	}
	
	@Override
	protected void processMouseEvent(MouseEvent e)
	{		
		//System.out.println("processMouseEvent:" + e.getPoint());
		
		int eventID = e.getID();
		
		// 鼠标点击, 调用监听器
		if(eventID == MouseEvent.MOUSE_PRESSED)
		{
			if(clickListener != null)
			{
				ActionEvent ae = new ActionEvent(this, eventID, "clicked");
				clickListener.actionPerformed(ae);
			}
		}
		
		// 鼠标移入, 进入hover状态
		if(eventID == MouseEvent.MOUSE_ENTERED)
		{
			hover = true;
			repaint();
			return;
		}
		
		// 鼠标移出, 退出hover状态
		if(eventID == MouseEvent.MOUSE_EXITED)
		{
			hover = false;
			repaint();
			return;
		}
		
		super.processMouseEvent(e);
	}
	

}
